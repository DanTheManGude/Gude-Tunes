{"version":3,"sources":["Constants.js","Utils.js","App.js","index.js"],"names":["scopesList","messageTypes","buttonIds","buttonProperties","SHUFFLE","text","name","CANDLES","candlesTime","requestAuth","redirectUri","encodeURIComponent","window","location","href","scopes","join","request","path","method","access_token","fields","fetch","headers","Accept","Authorization","buttonFunctions","addNewMessage","body","then","response","status","type","source","catch","error","start","end","JSON","stringify","context_uri","offset","position","position_ms","setTimeout","message","getButtonOnClick","buttonId","App","authentication","code","hashItems","urlSearchParams","URLSearchParams","search","params","Object","fromEntries","entries","hasOwnProperty","hash","substr","split","reduce","acc","element","parts","calculateAuthentication","useState","messageList","setMessageList","newMessage","currentState","concat","slice","useEffect","map","index","className","classNames","onClick","ReactDOM","render","StrictMode","id","document","getElementById","console","log","process"],"mappings":"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","file":"static/js/main.7d1c0817.chunk.js","sourcesContent":["export const scopesList = [\n  \"user-read-private\",\n  \"user-read-email\",\n  \"user-modify-playback-state\",\n];\n\nexport const messageTypes = {\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\",\n  INFO: \"INFO\",\n  WARNING: \"WARNING\",\n};\n\nexport const buttonIds = [\"SHUFFLE\", \"CANDLES\"];\n\nexport const buttonProperties = {\n  SHUFFLE: { text: \"Activate Shuffle\", name: \"Shuffle\" },\n  CANDLES: { text: \"Don't light candles\", name: \"Candles\" },\n};\n\nexport const candlesTime = { start: 13930, end: 21200 };\n","import { scopesList, messageTypes, candlesTime } from \"./Constants\";\n\nexport const calculateAuthentication = () => {\n  const authentication = { code: null, hashItems: {}, message: \"\" };\n\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n\n  if (params.hasOwnProperty(\"error\")) {\n    authentication.code = -1;\n    authentication.message = params.error;\n  } else if (!window.location.hash) {\n    authentication.code = 0;\n    authentication.message = \"Missing hash in the url\";\n  } else {\n    const hashItems = window.location.hash\n      .substr(1)\n      .split(\"&\")\n      .reduce((acc, element) => {\n        const parts = element.split(\"=\");\n        acc[parts[0]] = parts[1];\n        return acc;\n      }, {});\n    if (hashItems.hasOwnProperty(\"access_token\")) {\n      authentication.code = 1;\n      authentication.hashItems = hashItems;\n    } else {\n      authentication.code = -1;\n      authentication.message = \"Hash does not include access_token\";\n    }\n  }\n\n  return authentication;\n};\n\nexport const requestAuth = () => {\n  const redirectUri = encodeURIComponent(window.location.href);\n  const scopes = scopesList.join(\"%20\");\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=125aeb2f61c242c68fe33802c481bb08&redirect_uri=${redirectUri}&scope=${scopes}&response_type=token&state=202102121300`;\n};\n\nexport const request = (path, method = \"GET\", access_token, fields = {}) =>\n  fetch(`https://api.spotify.com/v1/${path}`, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${access_token}`,\n    },\n    ...fields,\n  });\n\nconst buttonFunctions = {\n  SHUFFLE: (access_token, addNewMessage, name) =>\n    request(\"me/player/shuffle?state=true\", \"PUT\", access_token, {\n      body: \"\",\n    })\n      .then((response) => {\n        const { status } = response;\n        if (status === 204) {\n          addNewMessage({\n            type: messageTypes.SUCCESS,\n            source: name,\n            text: \"Your playback has been shuffled.\",\n          });\n        } else {\n          throw status;\n        }\n      })\n      .catch((error) => {\n        addNewMessage({\n          type: messageTypes.ERROR,\n          source: name,\n          text: \"That didn't work; your playback was unchanged.\",\n        });\n      }),\n  CANDLES: (access_token, addNewMessage, name) => {\n    const { start, end } = candlesTime;\n\n    request(\"me/player/play\", \"PUT\", access_token, {\n      body: JSON.stringify({\n        context_uri: \"spotify:album:3QrkHSj8pBzE1Kwhpnktkw\",\n        offset: {\n          position: 4,\n        },\n        position_ms: start,\n      }),\n    })\n      .then((response) => {\n        const { status } = response;\n        if (status === 204) {\n          addNewMessage({\n            type: messageTypes.SUCCESS,\n            source: name,\n            text: \"Burning sage is cool.\",\n          });\n          setTimeout(() => {\n            request(\"me/player/pause\", \"PUT\", access_token, {\n              body: \"\",\n            })\n              .then((response) => {\n                const { status } = response;\n                if (status === 204) {\n                  addNewMessage({\n                    type: messageTypes.INFO,\n                    source: name,\n                    text: \"Don't set off the fire alarm.\",\n                  });\n                } else {\n                  throw status;\n                }\n              })\n              .catch((error) => {\n                addNewMessage({\n                  type: messageTypes.WARNING,\n                  source: name,\n                  text: \"The song should've been paused here.\",\n                });\n              });\n          }, end - start);\n        } else {\n          throw status;\n        }\n      })\n      .catch((error) => {\n        addNewMessage({\n          type: messageTypes.ERROR,\n          source: name,\n          text: error.message || \"It looks like something went awry.\",\n        });\n      });\n  },\n};\n\nexport const getButtonOnClick =\n  (buttonId, access_token, addNewMessage = () => {}, name = \"\") =>\n  () =>\n    buttonFunctions[buttonId](access_token, addNewMessage, name);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  requestAuth,\n  calculateAuthentication,\n  getButtonOnClick,\n} from \"./Utils\";\nimport { messageTypes, buttonIds, buttonProperties } from \"./Constants\";\n\nfunction App() {\n  const {\n    code,\n    message,\n    hashItems: { access_token },\n  } = calculateAuthentication();\n\n  const [messageList, setMessageList] = useState([]);\n\n  const addNewMessage = (newMessage) => {\n    setMessageList((currentState) => currentState.concat(newMessage));\n    setTimeout(() => {\n      setMessageList((currentState) => currentState.slice(1));\n    }, 6001);\n  };\n\n  useEffect(() => {\n    const startingMessage =\n      code === -1\n        ? {\n            type: messageTypes.ERROR,\n            text: message,\n          }\n        : code === 1\n        ? {\n            type: messageTypes.SUCCESS,\n            text: \"Login succesfull!\",\n          }\n        : {\n            type: messageTypes.INFO,\n            source: \"Welcome\",\n            text: \"Please login below to use the app.\",\n          };\n\n    addNewMessage(startingMessage);\n  }, [code, message]);\n\n  return (\n    <div>\n      {messageList.map((message, index) => {\n        const { type, text, source = \"\" } = message;\n        return (\n          <div key={`msg-${index}`} className={`message msg-${type}`}>\n            {source && <strong>{source}: </strong>}\n            {text}\n          </div>\n        );\n      })}\n\n      {code === 1 ? (\n        buttonIds.map((buttonId) => {\n          const { text, classNames = \"\", name } = buttonProperties[buttonId];\n          return (\n            <button\n              key={buttonId}\n              className={`utility-btn ${classNames}`}\n              onClick={getButtonOnClick(\n                buttonId,\n                access_token,\n                addNewMessage,\n                name\n              )}\n            >\n              {text}\n            </button>\n          );\n        })\n      ) : (\n        <button className=\"loginButton\" onClick={requestAuth}>\n          Login\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1 id=\"title\">Gude Tunes</h1>\n    <h3 id=\"subtitle\">Utilities to enhance your Spotify‎ experience</h3>\n    <h5 id=\"help-text\">\n      Be sure to have Spotify recently paused or playing for most utilities.\n    </h5>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nconsole.log(`Git hash: ${process.env.REACT_APP_VERSION}`);\n\n//reportWebVitals();\n"],"sourceRoot":""}