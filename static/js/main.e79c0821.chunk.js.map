{"version":3,"sources":["Constants.js","Utils.js","App.js","index.js"],"names":["scopesList","messageTypes","buttonIds","buttonProperties","SHUFFLE","text","name","CANDLES","BOSTON","candlesTime","requestAuth","redirectUri","encodeURIComponent","window","location","href","scopes","join","request","path","method","access_token","fields","queryParams","fetch","Object","keys","reduce","acc","element","index","headers","Accept","Authorization","buttonFunctions","addNewMessage","body","then","response","status","type","source","catch","error","start","end","JSON","stringify","context_uri","offset","position","position_ms","setTimeout","message","undefined","uri","getButtonOnClick","buttonId","App","authentication","code","hashItems","urlSearchParams","URLSearchParams","search","params","fromEntries","entries","hasOwnProperty","hash","substr","split","parts","calculateAuthentication","useState","messageList","setMessageList","newMessage","currentState","concat","slice","useEffect","map","className","classNames","onClick","ReactDOM","render","StrictMode","id","document","getElementById","console","log","process"],"mappings":"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","file":"static/js/main.e79c0821.chunk.js","sourcesContent":["export const scopesList = [\n  \"user-read-private\",\n  \"user-read-email\",\n  \"user-modify-playback-state\",\n];\n\nexport const messageTypes = {\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\",\n  INFO: \"INFO\",\n  WARNING: \"WARNING\",\n};\n\nexport const buttonIds = [\"SHUFFLE\", \"CANDLES\", \"BOSTON\"];\n\nexport const buttonProperties = {\n  SHUFFLE: { text: \"Activate Shuffle\", name: \"Shuffle\" },\n  CANDLES: { text: \"Don't light candles\", name: \"Candles\" },\n  BOSTON: { text: \"Boston Bound\", name: \"Boston\" },\n};\n\nexport const candlesTime = { start: 13930, end: 21200 };\n","import { scopesList, messageTypes, candlesTime } from \"./Constants\";\n\nexport const calculateAuthentication = () => {\n  const authentication = { code: null, hashItems: {}, message: \"\" };\n\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n\n  if (params.hasOwnProperty(\"error\")) {\n    authentication.code = -1;\n    authentication.message = params.error;\n  } else if (!window.location.hash) {\n    authentication.code = 0;\n    authentication.message = \"Missing hash in the url\";\n  } else {\n    const hashItems = window.location.hash\n      .substr(1)\n      .split(\"&\")\n      .reduce((acc, element) => {\n        const parts = element.split(\"=\");\n        acc[parts[0]] = parts[1];\n        return acc;\n      }, {});\n    if (hashItems.hasOwnProperty(\"access_token\")) {\n      authentication.code = 1;\n      authentication.hashItems = hashItems;\n    } else {\n      authentication.code = -1;\n      authentication.message = \"Hash does not include access_token\";\n    }\n  }\n\n  return authentication;\n};\n\nexport const requestAuth = () => {\n  const redirectUri = encodeURIComponent(window.location.href);\n  const scopes = scopesList.join(\"%20\");\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=125aeb2f61c242c68fe33802c481bb08&redirect_uri=${redirectUri}&scope=${scopes}&response_type=token&state=202102121300`;\n};\n\nexport const request = (\n  path,\n  method = \"GET\",\n  access_token,\n  fields = {},\n  queryParams = \"\"\n) =>\n  fetch(\n    `https://api.spotify.com/v1/${path}${\n      queryParams &&\n      Object.keys(queryParams).reduce(\n        (acc, element, index) =>\n          `${acc}${index === 0 ? \"?\" : \"&\"}${element}=${queryParams[element]}`,\n        \"\"\n      )\n    }`,\n    {\n      method,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n      ...fields,\n    }\n  );\n\nconst shuffleFunction = (access_token, addNewMessage, name) =>\n  request(\"me/player/shuffle?state=true\", \"PUT\", access_token, {\n    body: \"\",\n  })\n    .then((response) => {\n      const { status } = response;\n      if (status === 204) {\n        addNewMessage({\n          type: messageTypes.SUCCESS,\n          source: name,\n          text: \"Your playback has been shuffled.\",\n        });\n      } else {\n        throw status;\n      }\n    })\n    .catch((error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: name,\n        text: \"That didn't work; your playback was unchanged.\",\n      });\n    });\n\nconst candlesFunction = (access_token, addNewMessage, name) => {\n  const { start, end } = candlesTime;\n\n  request(\"me/player/play\", \"PUT\", access_token, {\n    body: JSON.stringify({\n      context_uri: \"spotify:album:3QrkHSj8pBzE1Kwhpnktkw\",\n      offset: {\n        position: 4,\n      },\n      position_ms: start,\n    }),\n  })\n    .then((response) => {\n      const { status } = response;\n      if (status === 204) {\n        addNewMessage({\n          type: messageTypes.SUCCESS,\n          source: name,\n          text: \"Burning sage is cool.\",\n        });\n        setTimeout(() => {\n          request(\"me/player/pause\", \"PUT\", access_token, {\n            body: \"\",\n          })\n            .then((response) => {\n              const { status } = response;\n              if (status === 204) {\n                addNewMessage({\n                  type: messageTypes.INFO,\n                  source: name,\n                  text: \"Don't set off the fire alarm.\",\n                });\n              } else {\n                throw status;\n              }\n            })\n            .catch((error) => {\n              addNewMessage({\n                type: messageTypes.WARNING,\n                source: name,\n                text: \"The song should've been paused here.\",\n              });\n            });\n        }, end - start);\n      } else {\n        throw status;\n      }\n    })\n    .catch((error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: name,\n        text: error.message || \"It looks like something went awry.\",\n      });\n    });\n};\n\nconst bostonFunction = (access_token, addNewMessage, name) => {\n  request(\"me/player/queue\", \"POST\", access_token, undefined, {\n    uri: \"spotify:track:7rSERmjAT38lC5QhJ8hnQc\",\n  })\n    .then((response) => {\n      const { status } = response;\n      if (status === 204) {\n        request(\"me/player/next\", \"POST\", access_token, {\n          body: \"\",\n        }).then((response) => {\n          const { status } = response;\n          if (status === 204) {\n            addNewMessage({\n              type: messageTypes.SUCCESS,\n              source: name,\n              text: \"Safe travels.\",\n            });\n          } else {\n            throw status;\n          }\n        });\n      }\n    })\n    .catch((error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: name,\n        text: error.message || \"It looks like your package is delayed.\",\n      });\n    });\n};\n\nconst buttonFunctions = {\n  SHUFFLE: shuffleFunction,\n  CANDLES: candlesFunction,\n  BOSTON: bostonFunction,\n};\n\nexport const getButtonOnClick =\n  (buttonId, access_token, addNewMessage = () => {}, name = \"\") =>\n  () =>\n    buttonFunctions[buttonId](access_token, addNewMessage, name);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  requestAuth,\n  calculateAuthentication,\n  getButtonOnClick,\n} from \"./Utils\";\nimport { messageTypes, buttonIds, buttonProperties } from \"./Constants\";\n\nfunction App() {\n  const {\n    code,\n    message,\n    hashItems: { access_token },\n  } = calculateAuthentication();\n\n  const [messageList, setMessageList] = useState([]);\n\n  const addNewMessage = (newMessage) => {\n    setMessageList((currentState) => currentState.concat(newMessage));\n    setTimeout(() => {\n      setMessageList((currentState) => currentState.slice(1));\n    }, 6001);\n  };\n\n  useEffect(() => {\n    const startingMessage =\n      code === -1\n        ? {\n            type: messageTypes.ERROR,\n            text: message,\n          }\n        : code === 1\n        ? {\n            type: messageTypes.SUCCESS,\n            text: \"Login succesfull!\",\n          }\n        : {\n            type: messageTypes.INFO,\n            source: \"Welcome\",\n            text: \"Please login below to use the app.\",\n          };\n\n    addNewMessage(startingMessage);\n  }, [code, message]);\n\n  return (\n    <div>\n      {messageList.map((message, index) => {\n        const { type, text, source = \"\" } = message;\n        return (\n          <div key={`msg-${index}`} className={`message msg-${type}`}>\n            {source && <strong>{source}: </strong>}\n            {text}\n          </div>\n        );\n      })}\n\n      {code === 1 ? (\n        buttonIds.map((buttonId) => {\n          const { text, classNames = \"\", name } = buttonProperties[buttonId];\n          return (\n            <button\n              key={buttonId}\n              className={`utility-btn ${classNames}`}\n              onClick={getButtonOnClick(\n                buttonId,\n                access_token,\n                addNewMessage,\n                name\n              )}\n            >\n              {text}\n            </button>\n          );\n        })\n      ) : (\n        <button className=\"loginButton\" onClick={requestAuth}>\n          Login\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1 id=\"title\">Gude Tunes</h1>\n    <h3 id=\"subtitle\">Utilities to enhance your Spotify‎ experience</h3>\n    <h5 id=\"help-text\">\n      Be sure to have Spotify recently paused or playing for most utilities.\n    </h5>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nconsole.log(`Git hash: ${process.env.REACT_APP_VERSION}`);\n\n//reportWebVitals();\n"],"sourceRoot":""}