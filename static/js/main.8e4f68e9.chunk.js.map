{"version":3,"sources":["Constants.js","Utils.js","App.js","index.js"],"names":["existingUsers","scopesList","messageTypes","buttonIds","buttonProperties","SHUFFLE","text","name","SATURDAY","CANDLES","BOSTON","candlesTime","requestAuth","redirectUri","encodeURIComponent","window","location","href","scopes","join","request","path","method","access_token","fields","queryParams","fetch","Object","keys","reduce","acc","element","index","headers","Accept","Authorization","playSaturday","buttonFunctions","addNewMessage","body","then","response","status","type","source","catch","error","Date","getDay","JSON","stringify","context_uri","offset","position","message","start","end","position_ms","setTimeout","resp","undefined","uri","getButtonOnClick","buttonId","getEmailLink","displayName","email","getSendEmail","userInfo","messageSource","emailjs","send","App","authentication","code","hashItems","urlSearchParams","URLSearchParams","search","params","fromEntries","entries","hasOwnProperty","hash","substr","split","parts","calculateAuthentication","useState","messageList","setMessageList","is","newUser","setNewUser","newMessage","currentState","concat","slice","useEffect","console","log","display_name","includes","info","map","className","onClick","classNames","ReactDOM","render","StrictMode","id","document","getElementById","process"],"mappings":"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","file":"static/js/main.8e4f68e9.chunk.js","sourcesContent":["export const existingUsers = [\"dgude31@gmail.com\", \"emtemple211@gmail.com\"];\n\nexport const scopesList = [\n  \"user-read-private\",\n  \"user-read-email\",\n  \"user-modify-playback-state\",\n];\n\nexport const messageTypes = {\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\",\n  INFO: \"INFO\",\n  WARNING: \"WARNING\",\n};\n\nexport const buttonIds = [\"SHUFFLE\", \"SATURDAY\", \"CANDLES\", \"BOSTON\"];\n\nexport const buttonProperties = {\n  SHUFFLE: { text: \"Activate Shuffle\", name: \"Shuffle\" },\n  SATURDAY: { text: \"Is it Saturday?\", name: \"Saturday\" },\n  CANDLES: { text: \"Don't light candles\", name: \"Candles\" },\n  BOSTON: { text: \"Boston Bound\", name: \"Boston\" },\n};\n\nexport const candlesTime = { start: 13930, end: 21200 };\n\nexport const emailServiceId = \"service_sbv0ia4\";\nexport const templateId = \"template_fe1e5ws\";\n","import emailjs from \"emailjs-com\";\nimport {\n  scopesList,\n  messageTypes,\n  candlesTime,\n  emailServiceId,\n  templateId,\n} from \"./Constants\";\n\nexport const calculateAuthentication = () => {\n  const authentication = { code: null, hashItems: {}, message: \"\" };\n\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n\n  if (params.hasOwnProperty(\"error\")) {\n    authentication.code = -1;\n    authentication.message = params.error;\n  } else if (!window.location.hash) {\n    authentication.code = 0;\n    authentication.message = \"Missing hash in the url\";\n  } else {\n    const hashItems = window.location.hash\n      .substr(1)\n      .split(\"&\")\n      .reduce((acc, element) => {\n        const parts = element.split(\"=\");\n        acc[parts[0]] = parts[1];\n        return acc;\n      }, {});\n    if (hashItems.hasOwnProperty(\"access_token\")) {\n      authentication.code = 1;\n      authentication.hashItems = hashItems;\n    } else {\n      authentication.code = -1;\n      authentication.message = \"Hash does not include access_token\";\n    }\n  }\n\n  return authentication;\n};\n\nexport const requestAuth = () => {\n  const redirectUri = encodeURIComponent(window.location.href);\n  const scopes = scopesList.join(\"%20\");\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=125aeb2f61c242c68fe33802c481bb08&redirect_uri=${redirectUri}&scope=${scopes}&response_type=token&state=202102121300`;\n};\n\nexport const request = (\n  path,\n  method = \"GET\",\n  access_token,\n  fields = {},\n  queryParams = \"\"\n) =>\n  fetch(\n    `https://api.spotify.com/v1/${path}${\n      queryParams &&\n      Object.keys(queryParams).reduce(\n        (acc, element, index) =>\n          `${acc}${index === 0 ? \"?\" : \"&\"}${element}=${queryParams[element]}`,\n        \"\"\n      )\n    }`,\n    {\n      method,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n      ...fields,\n    }\n  );\n\nconst shuffleFunction = (access_token, addNewMessage, name) =>\n  request(\"me/player/shuffle?state=true\", \"PUT\", access_token, {\n    body: \"\",\n  })\n    .then((response) => {\n      const { status } = response;\n      if (status === 204) {\n        addNewMessage({\n          type: messageTypes.SUCCESS,\n          source: name,\n          text: \"Your playback has been shuffled.\",\n        });\n      } else {\n        throw response;\n      }\n    })\n    .catch((error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: name,\n        text: \"That didn't work; your playback was unchanged.\",\n      });\n    });\n\nconst candlesFunction = (access_token, addNewMessage, name) => {\n  const { start, end } = candlesTime;\n\n  request(\"me/player/play\", \"PUT\", access_token, {\n    body: JSON.stringify({\n      context_uri: \"spotify:album:3QrkHSj8pBzE1Kwhpnktkw\",\n      offset: {\n        position: 4,\n      },\n      position_ms: start,\n    }),\n  })\n    .then((response) => {\n      const { status } = response;\n      if (status === 204) {\n        addNewMessage({\n          type: messageTypes.SUCCESS,\n          source: name,\n          text: \"Burning sage is cool.\",\n        });\n        setTimeout(() => {\n          request(\"me/player/pause\", \"PUT\", access_token, {\n            body: \"\",\n          })\n            .then((resp) => {\n              const { status: statusCode } = resp;\n              if (statusCode === 204) {\n                addNewMessage({\n                  type: messageTypes.INFO,\n                  source: name,\n                  text: \"Don't set off the fire alarm.\",\n                });\n              } else {\n                throw resp;\n              }\n            })\n            .catch((error) => {\n              addNewMessage({\n                type: messageTypes.WARNING,\n                source: name,\n                text: \"The song should've been paused here.\",\n              });\n            });\n        }, end - start);\n      } else {\n        throw response;\n      }\n    })\n    .catch((error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: name,\n        text: error.message || \"It looks like something went awry.\",\n      });\n    });\n};\n\nconst bostonFunction = (access_token, addNewMessage, name) => {\n  request(\"me/player/queue\", \"POST\", access_token, undefined, {\n    uri: \"spotify:track:7rSERmjAT38lC5QhJ8hnQc\",\n  })\n    .then((response) => {\n      const { status } = response;\n      if (status === 204) {\n        request(\"me/player/next\", \"POST\", access_token, {\n          body: \"\",\n        }).then((response) => {\n          const { status } = response;\n          if (status === 204) {\n            addNewMessage({\n              type: messageTypes.SUCCESS,\n              source: name,\n              text: \"Safe travels.\",\n            });\n          } else {\n            throw response;\n          }\n        });\n      }\n    })\n    .catch((error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: name,\n        text: error.message || \"It looks like your package is delayed.\",\n      });\n    });\n};\n\nvar playSaturday = false;\nconst saturdayFunction = (access_token, addNewMessage, name) => {\n  const day = new Date().getDay();\n\n  switch (day) {\n    case 1:\n      addNewMessage({\n        type: messageTypes.INFO,\n        source: name,\n        text: \"It is not Satuday. It is Monday, slow down.\",\n      });\n      break;\n    case 3:\n      addNewMessage({\n        type: messageTypes.INFO,\n        source: name,\n        text: \"It is not Satuday. It is Wednesday, not a sound.\",\n      });\n      break;\n    case 5:\n      addNewMessage({\n        type: messageTypes.INFO,\n        source: name,\n        text: \"It is not Satuday. It is Friday, might get loud.\",\n      });\n      break;\n    case 6:\n      addNewMessage({\n        type: messageTypes.INFO,\n        source: name,\n        text: \"It is Satuday. We paint the town!\",\n      });\n      playSaturday = true;\n      break;\n    default:\n      addNewMessage({\n        type: messageTypes.INFO,\n        source: name,\n        text: \"It is not Satuday. Have you lost your sense of time or two?\",\n      });\n      break;\n  }\n\n  if (playSaturday) {\n    request(\"me/player/play\", \"PUT\", access_token, {\n      body: JSON.stringify({\n        context_uri: \"spotify:playlist:5gR6gvNGivsJJA5bMwolTU\",\n        offset: {\n          position: 4,\n        },\n      }),\n    })\n      .then((response) => {\n        const { status } = response;\n        if (status === 204) {\n          addNewMessage({\n            type: messageTypes.SUCCESS,\n            source: name,\n            text: \"Life moves slow on the ocean floor (feeling great)\",\n          });\n        } else {\n          throw response;\n        }\n      })\n      .catch((error) => {\n        addNewMessage({\n          type: messageTypes.ERROR,\n          source: name,\n          text: error.message || \"It looks like something went awry.\",\n        });\n      });\n  }\n  playSaturday = true;\n};\n\nconst buttonFunctions = {\n  SHUFFLE: shuffleFunction,\n  SATURDAY: saturdayFunction,\n  CANDLES: candlesFunction,\n  BOSTON: bostonFunction,\n};\n\nexport const getButtonOnClick =\n  (buttonId, access_token, addNewMessage = () => {}, name = \"\") =>\n  () =>\n    buttonFunctions[buttonId](access_token, addNewMessage, name);\n\nconst getEmailLink = ({ displayName, email }) =>\n  `mailto:dgude31@outlook.com?subject=Gude%20Tunes%20Access&body=Hello%2C%0D%0A%0D%0AI%20would%20like%20to%20have%20access%20to%20the%20Gude%20Tunes%20website%20functionality%2C%20but%20the%20request%20button%20did%20not%20work.%20My%20name%20is%2C${displayName}%2C%20and%20my%20email%20is%2C${email}.%0D%0A%0D%0AThhank%20you!`;\n\nexport const getSendEmail = (addNewMessage, userInfo) => {\n  const messageSource = \"Request Access\";\n  emailjs.send(emailServiceId, templateId, userInfo).then(\n    (response) => {\n      addNewMessage({\n        type: messageTypes.SUCCESS,\n        source: messageSource,\n        text: \"The request was put through. You should recieve a confirmation email shortly.\",\n      });\n    },\n    (error) => {\n      addNewMessage({\n        type: messageTypes.ERROR,\n        source: messageSource,\n        text: `The request was unsuccessful. You can reach out to <a href=\"mailto:${getEmailLink(\n          userInfo\n        )}\">dgude31@outlook.com</a> directly.`,\n      });\n    }\n  );\n};\n\nexport const isSaturday = () => new Date().getDay() === 7;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  requestAuth,\n  calculateAuthentication,\n  getButtonOnClick,\n  request,\n  getSendEmail,\n  isSaturday,\n} from \"./Utils\";\nimport {\n  messageTypes,\n  buttonIds,\n  buttonProperties,\n  existingUsers,\n} from \"./Constants\";\n\nfunction App() {\n  const {\n    code,\n    message,\n    hashItems: { access_token },\n  } = calculateAuthentication();\n\n  const [messageList, setMessageList] = useState([]);\n  const [newUser, setNewUser] = useState({ is: false });\n\n  const addNewMessage = (newMessage) => {\n    setMessageList((currentState) => currentState.concat(newMessage));\n    setTimeout(() => {\n      setMessageList((currentState) => currentState.slice(1));\n    }, 6001);\n  };\n\n  useEffect(() => {\n    const startingMessage =\n      code === -1\n        ? {\n            type: messageTypes.ERROR,\n            text: message,\n          }\n        : code === 1\n        ? {\n            type: messageTypes.SUCCESS,\n            text: \"Login succesfull!\",\n          }\n        : {\n            type: messageTypes.INFO,\n            source: \"Welcome\",\n            text: \"Please login below to use the app.\",\n          };\n\n    addNewMessage(startingMessage);\n  }, [code, message]);\n\n  useEffect(() => {\n    if (!access_token) return;\n\n    console.log(access_token);\n    request(\"/me\", \"GET\", access_token)\n      .then((response) => {\n        const { status } = response;\n        if (status === 200) {\n          const { email, display_name: displayName } = response;\n          if (!existingUsers.includes(\"email\")) {\n            addNewMessage({\n              type: messageTypes.INFO,\n              source: \"Application\",\n              text: \"Only designated Spotify accounts can use the application. Click below to request access.\",\n            });\n            setNewUser({ is: true, info: { email, displayName } });\n          }\n        } else {\n          throw response;\n        }\n      })\n      .catch((error) => {\n        // addNewMessage({\n        //   type: messageTypes.WARNING,\n        //   source: \"Application\",\n        //   text: \"Something isn't right, the app may be currently unavailable.\",\n        // });\n        console.error(error);\n      });\n  }, [access_token]);\n\n  return (\n    <div>\n      {messageList.map((message, index) => {\n        const { type, text, source = \"\" } = message;\n        return (\n          <div key={`msg-${index}`} className={`message msg-${type}`}>\n            {source && <strong>{source}: </strong>}\n            {text}\n          </div>\n        );\n      })}\n\n      {newUser.is && (\n        <button\n          key={\"NEWUSER\"}\n          className={\"utility-btn new-user-btn\"}\n          onClick={getSendEmail(addNewMessage, newUser.info)}\n        >\n          Request Access\n        </button>\n      )}\n\n      {code === 1 ? (\n        buttonIds.map((buttonId) => {\n          const { text, classNames = \"\", name } = buttonProperties[buttonId];\n          return (\n            <button\n              key={buttonId}\n              className={[\"utility-btn\", ...classNames].join(\" \")}\n              onClick={getButtonOnClick(\n                buttonId,\n                access_token,\n                addNewMessage,\n                name\n              )}\n            >\n              {text}\n            </button>\n          );\n        })\n      ) : (\n        <button className=\"loginButton\" onClick={requestAuth}>\n          Login\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1 id=\"title\">Gude Tunes</h1>\n    <h3 id=\"subtitle\">Utilities to enhance your Spotify‎ experience</h3>\n    <h5 id=\"help-text\">\n      Be sure to have Spotify recently paused or playing for most utilities.\n    </h5>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nconsole.log(`Git hash: ${process.env.REACT_APP_VERSION}`);\n\n//reportWebVitals();\n"],"sourceRoot":""}